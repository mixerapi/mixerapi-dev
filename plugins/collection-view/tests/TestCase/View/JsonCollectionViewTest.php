<?php

namespace MixerApi\CollectionView\Test\TestCase\View;

use Cake\Routing\Router;
use Cake\TestSuite\TestCase;
use MixerApi\CollectionView\Configuration;

class JsonCollectionViewTest extends TestCase
{
    /**
     * @var string[]
     */
    public $fixtures = [
        'plugin.MixerApi/CollectionView.Actors',
        'plugin.MixerApi/CollectionView.FilmActors',
        'plugin.MixerApi/CollectionView.Films',
    ];

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        static::setAppNamespace('MixerApi\CollectionView\Test\App');
        Router::reload();
        Router::connect('/', ['controller' => 'Actors', 'action' => 'index']);
        Router::connect('/:controller/:action/*');
        Router::connect('/:plugin/:controller/:action/*');
        (new Configuration())->default();
    }

    public function test_collection()
    {
        $controller = (new ControllerFactory())->build();

        $controller->viewBuilder()
            ->setClassName('MixerApi/CollectionView.JsonCollection')
            ->setOptions([
                'serialize' => 'actors'
            ]);
        $view = $controller->createView();
        $output = $view->render();

        $this->assertIsString($output);

        $object = json_decode($output);

        $this->assertIsObject($object);

        $this->assertEquals(2, $object->collection->count);
        $this->assertEquals(20, $object->collection->total);
        $this->assertEquals('/actors', $object->collection->url);
        $this->assertEquals('/?page=2', $object->collection->next);
        $this->assertEquals('/?page=10', $object->collection->last);

        $actor = $object->data[0];
        $this->assertIsArray($actor->films);
    }

    public function test_collection_with_no_json_options()
    {
        $controller = (new ControllerFactory())->build();

        $controller->viewBuilder()
            ->setClassName('MixerApi/CollectionView.JsonCollection')
            ->setOptions([
                'serialize' => 'actors',
                'jsonOptions' => false,
            ]);
        $view = $controller->createView();
        $output = $view->render();

        $this->assertIsString($output);

        $object = json_decode($output);

        $this->assertIsObject($object);

        $this->assertEquals(2, $object->collection->count);
        $this->assertEquals(20, $object->collection->total);
        $this->assertEquals('/actors', $object->collection->url);
        $this->assertEquals('/?page=2', $object->collection->next);
        $this->assertEquals('/?page=10', $object->collection->last);

        $actor = $object->data[0];
        $this->assertIsArray($actor->films);
    }
}
